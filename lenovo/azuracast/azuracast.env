# This file was automatically generated by AzuraCast.
# You can modify it as necessary. To apply changes, restart the Docker containers.
# Remove the leading "#" symbol from lines to uncomment them.

# The locale to use for CLI commands
# Valid options: en_US, cs_CZ, nl_NL, fr_FR, de_DE, el_GR, it_IT, ja_JP, ko_KR, nb_NO, pl_PL, pt_PT, pt_BR, ru_RU, zh_CN, es_ES, sv_SE, tr_TR, uk_UA
# Default: en_US
LANG=en_US

# The application environment
# Valid options: Production, Testing, Development
APPLICATION_ENV=production

# Manually modify the logging level
# This allows you to log debug-level errors temporarily (for problem-solving)
# or reduce the volume of logs that are produced by your installation,
# without needing to modify whether your installation is a production or
# development instance.
# Valid options: debug, info, notice, warning, error, critical, alert, emergency
# LOG_LEVEL=

# Enable Custom Code Plugins
# Enable the composer "merge" functionality to combine the main application's
# composer.json file with any plugin composer files. This can have
# performance implications, so you should only use it if you use one or more
# plugins with their own Composer dependencies.
# Valid options: true, false
COMPOSER_PLUGIN_MODE=false

# Minimum Port for Station Port Assignment
# Modify this if your stations are listening on nonstandard ports.
AUTO_ASSIGN_PORT_MIN=8000

# Maximum Port for Station Port Assignment
# Modify this if your stations are listening on nonstandard ports.
AUTO_ASSIGN_PORT_MAX=8100

# Show Detailed Slim Application Errors
# This allows you to debug Slim Application Errors you may encounter. By
# default, this is disabled to prevent users from seeing privileged
# information. Please report any Slim Application Error logs to the
# development team on GitHub.
# Valid options: true, false
SHOW_DETAILED_ERRORS=false

# MariaDB Host
# Do not modify this after installation.
# Default: localhost
MYSQL_HOST=localhost

# MariaDB Port
# Do not modify this after installation.
# Default: 3306
MYSQL_PORT=3306

# MariaDB Username
# Do not modify this after installation.
# Default: azuracast
MYSQL_USER=azuracast

# MariaDB Password
# Do not modify this after installation.
# Default: azur4c457
MYSQL_PASSWORD=GTPEjgJKjgpc

# MariaDB Database Name
# Do not modify this after installation.
# Default: azuracast
MYSQL_DATABASE=azuracast

# Auto-generate Random MariaDB Root Password
# Do not modify this after installation.
# MYSQL_RANDOM_ROOT_PASSWORD=

# MariaDB Root Password
# Do not modify this after installation.
MYSQL_ROOT_PASSWORD=3TEJtDKAnZ2aaJkhmp2P

# Enable MariaDB Slow Query Log
# Log slower queries to diagnose possible database issues. Only turn this on
# if needed.
# MYSQL_SLOW_QUERY_LOG=

# MariaDB Maximum Connections
# Set the amount of allowed connections to the database. This value should be
# increased if you are seeing the "Too many connections" error in the logs.
# Default: 100
# MYSQL_MAX_CONNECTIONS=100

# MariaDB InnoDB Buffer Pool Size
# The InnoDB buffer pool size controls how much data & indexes are kept in
# memory. Making sure that this value is as large as possible reduces the
# amount of disk IO.
# Default: 128M
# MYSQL_INNODB_BUFFER_POOL_SIZE=128M

# MariaDB InnoDB Log File Size
# The InnoDB log file is used to achieve data durability in case of crashes
# or unexpected shutoffs and to allow the DB to better optimize IO for write
# operations.
# Default: 16M
# MYSQL_INNODB_LOG_FILE_SIZE=16M

# Enable Redis
# Disable to use a flatfile cache instead of Redis.
# ENABLE_REDIS=

# Redis Host
# Default: localhost
REDIS_HOST=localhost

# Redis Port
# Default: 6379
REDIS_PORT=6379

# Redis DB (Recommended to Use Default)
# REDIS_DB=

# PHP Maximum POST File Size
# Default: 25M
# PHP_MAX_FILE_SIZE=25M

# PHP Memory Limit
# Default: 128M
# PHP_MEMORY_LIMIT=128M

# PHP Script Maximum Execution Time (Seconds)
# Default: 30
# PHP_MAX_EXECUTION_TIME=30

# Short Sync Task Execution Time (Seconds)
# The maximum execution time (and lock timeout) for the 15-second, 1-minute
# and 5-minute synchronization tasks.
# SYNC_SHORT_EXECUTION_TIME=

# Long Sync Task Execution Time (Seconds)
# The maximum execution time (and lock timeout) for the 1-hour
# synchronization task.
# SYNC_LONG_EXECUTION_TIME=

# Now Playing Delay Time (Seconds)
# The delay (in seconds) between Now Playing checks for every station.
# Decrease for more frequent checks at the expense of performance; increase
# for less frequent checks but better performance (for large installations).
# NOW_PLAYING_DELAY_TIME=

# Now Playing Max Concurrent Processes
# The maximum number of concurrent processes for now playing updates.
# Increasing this can help reduce the latency between updates now playing
# updates on large installations.
# NOW_PLAYING_MAX_CONCURRENT_PROCESSES=

# Maximum PHP-FPM Worker Processes
# Default: 5
# PHP_FPM_MAX_CHILDREN=5

# Enable Performance Profiling Extension
# Profiling data can be viewed by visiting
# http://your-azuracast-site/?SPX_KEY=dev&SPX_UI_URI=/.
# PROFILING_EXTENSION_ENABLED=

# Profile Performance on All Requests
# This will have a significant performance impact on your installation.
# PROFILING_EXTENSION_ALWAYS_ON=

# Profiling Extension HTTP Key
# The value for the "SPX_KEY" parameter for viewing profiling pages.
# PROFILING_EXTENSION_HTTP_KEY=

# Profiling Extension IP Allow List
# Valid options: 127.0.0.1, *
# Default: *
# PROFILING_EXTENSION_HTTP_IP_WHITELIST=*

# Nginx Max Client Body Size
# This is the total size any single request body can be. AzuraCast chunks its
# uploads into smaller file sizes, so this only applies when doing custom
# uploads via the API. Sizes should be listed in a format like "100K",
# "128M", "1G" for kilobytes, megabytes, and gigabytes respectively.
# Default: 50M
# NGINX_CLIENT_MAX_BODY_SIZE=50M

# Automatically block common bots and crawlers
# If enabled, this will automatically download and update the Ultimate Nginx
# Bad Bot Blocker, which will block aggressive crawlers and other bots.
# Valid options: true, false
NGINX_BLOCK_BOTS=true

# Enable web-based Docker image updates
# Default: true
# ENABLE_WEB_UPDATER=true

# Extra Ubuntu packages to install upon startup
# Default: "Separate package names with a space. Packages will be installed during container startup."
# INSTALL_PACKAGES_ON_STARTUP="Separate package names with a space. Packages will be installed during container startup."