volumes:
  netdataconfig:
  netdatalib:
  netdatacache:
  etc_wireguard:

services:
#  filebrowser:
#    image: hurlenko/filebrowser
#    container_name: filebrowser
#    user: "${PUID}:${PGID}"
#    ports:
#      - 8080:8080
#    volumes:
#       - ${DATA}/..:/data
#       - ${APPDATA}/filebrowser:/config
#     environment:
#       - FB_BASEURL=/filebrowser
#     restart: unless-stopped
    
#   gotify:
#     image: gotify/server
#     container_name: gotify
#     ports:
#       - 5454:80
#     environment:
#       - GOTIFY_DEFAULTUSER_PASS=admin
#       - TZ=${TZ}
#     volumes:
#       - ${APPDATA}/gotify:/app/data
#     # to run gotify as a dedicated user:
#     # sudo chown -R 1234:1234 ./gotify_data
#     # user: "1234:1234"
    
#   dozzle:
#     container_name: dozzle
#     image: amir20/dozzle:latest
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     ports:
#       - 8020:8080

#   homeassistant:
#     image: lscr.io/linuxserver/homeassistant:latest
#     container_name: homeassistant
#     network_mode: host
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - TZ=${TZ}
#     volumes:
#       - ${APPDATA}/home-assistant:/config
# #   ports:
# #     - 8123:8123 #don't need if running in host network mode
#    #devices:
#     # - /run/dbus:/run/dbus #optional
#     restart: unless-stopped

#   navidrome:
#     image: deluan/navidrome:latest
#     container_name: navidrome
#     user: ${PUID}:${PGID} # should be owner of volumes
#     ports:
#       - 4533:4533
#     restart: unless-stopped
#     environment:
#       # Optional: put your config options customization here. Examples:
#       ND_SCANSCHEDULE: 1h
#       ND_LOGLEVEL: info  
#       ND_SESSIONTIMEOUT: 24h
#       ND_BASEURL: ""
#     volumes:
#       - ${APPDATA}/navidrome:/data
#       - ${DATA}/Music/Regular Music:/music:ro

  netdata:
    image: netdata/netdata:stable
    container_name: netdata
    pid: host
    network_mode: host
    hostname: enterprise
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /:/host/root:ro,rslave
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /run/dbus:/run/dbus:ro
    environment:
      - NETDATA_CLAIM_TOKEN=WZx2rmJrC8xF1Qytv4Gn62XB5qGSTErqJm2_IgvH8S4EDzYbeQCO5MlSUzk6JFUnQegNBhMd6Ll9SlILzXa3cXxPAekMII1lp9X-NWW3BPYwRxSbcbyc2HvHn97VdSjvYdWWxrw
      - NETDATA_CLAIM_URL=https://app.netdata.cloud
      - NETDATA_CLAIM_ROOMS=d0b6f03e-1056-4ac4-a0bf-d21204f2f00e
      - NETDATA_EXTRA_DEB_PACKAGES=apcupsd,lm-sensors

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: npm
    hostname: npm
    restart: unless-stopped
#    networks: 
#      default:
#        ipv4_address: 192.168.112.13
    ports:
      # These ports are in format <host-port>:<container-port>
      - 80:80 # Public HTTP Port
      - 443:443 # Public HTTPS Port
      - 81:81 # Admin Web Port
      # Add any other Stream port you want to expose
      # - '21:21' # FTP

    # Uncomment the next line if you uncomment anything in the section
    # environment:
      # Uncomment this if you want to change the location of
      # the SQLite DB file within the container
      # DB_SQLITE_FILE: "/data/database.sqlite"

      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'

    volumes:
      - ${APPDATA}/nginx-proxy/data:/data
      - ${APPDATA}/nginx-proxy/letsencrypt:/etc/letsencrypt
      - /etc/ssl:/etc/ssl

#   nextcloud:
#     image: linuxserver/nextcloud
#     container_name: nextcloud
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - TZ=${TZ}
#     volumes:
#       - ${APPDATA}/nextcloud:/config
#       - ${DATA}/../Nextcloud:/data
#     ports:
#       - ${PORT}:443
#     restart: unless-stopped
#     depends_on:
#       - nextcloud_db
#   nextcloud_db:
#     image: linuxserver/mariadb
#     container_name: nextcloud_db
#     hostname: nextcloud_db
# #   networks: 
# #     default:
# #       ipv4_address: 192.168.112.3    
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#       - TZ=${TZ}
#       - MYSQL_DATABASE=nextcloud_db
#       - MYSQL_USER=nextcloud
#       - MYSQL_PASSWORD=${DATABASE_PASSWORD}
#     volumes:
#       - ${APPDATA}/nextcloud/DB:/config
#     restart: unless-stopped
    
#   organizr:
#     image: organizr/organizr:latest
#     container_name: organizr
#     hostname: organizr
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - TZ=${TZ}
#     volumes:
#       - ${APPDATA}/organizr:/config
#     ports:
#       - 100:80
#     restart: unless-stopped

#   overseerr:
#     image: sctx/overseerr:latest
#     container_name: overseerr
#     environment:
#       - LOG_LEVEL=debug
#       - TZ=${TZ}
#     ports:
#       - 5055:5055
#     volumes:
#       - ${APPDATA}/overseerr:/app/config
#     restart: unless-stopped

#   tautulli:
#     image: lscr.io/linuxserver/tautulli:latest
#     container_name: tautulli
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - TZ=${TZ}
#     volumes:
#       - ${APPDATA}/tautulli:/config
#     ports:
#       - 8181:8181
#     restart: unless-stopped

#   wrapperr:
#     ports:
#       - 8383:8282
#     container_name: wrapperr
#     image: ghcr.io/aunefyren/wrapperr:latest
#     restart: unless-stopped
#     volumes:
#       - ${APPDATA}/wrapper:/app/config

  smokeping:
    image: lscr.io/linuxserver/smokeping:latest
    container_name: smokeping
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      #- MASTER_URL=http://<master-host-ip>:80/smokeping/ #optional
      #- SHARED_SECRET=password #optional
      #- CACHE_DIR=/tmp #optional
    volumes:
      - ${APPDATA}/smokeping/config:/config
      - ${APPDATA}/smokeping/data:/data
    ports:
      - 2222:80
    restart: unless-stopped
    
  librespeed:
    image: lscr.io/linuxserver/librespeed:latest
    container_name: librespeed
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ={TZ}
      - PASSWORD=rm7508216
      #- CUSTOM_RESULTS=false #optional
      #- DB_TYPE=sqlite #optional
      #- DB_NAME=DB_NAME #optional
      #- DB_HOSTNAME=DB_HOSTNAME #optional
      #- DB_USERNAME=DB_USERNAME #optional
      #- DB_PASSWORD=DB_PASSWORD #optional
      #- DB_PORT=DB_PORT #optional
      #- IPINFO_APIKEY=ACCESS_TOKEN #optional
    volumes:
      - ${APPDATA}/librespeed:/config
    ports:
      - 78:80
    restart: unless-stopped
    
  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: syncthing #optional
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}/syncthing:/config
      - ${DATA}:/data1
      - ${BACKUPS}:/backups
      #- /path/to/data2:/data2
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
 
  # playlistSync:
  #   image: rnagabhyrava/plexplaylistsync:latest
  #   container_name: playlistsync
  #   # optional only if you chose WRITE_MISSING_AS_CSV=1 in env
  #   volumes:
  #     - ${DATA}/Music:/data
  #   environment:
  #     - PLEX_URL=http://10.0.0.10:32400
  #     - PLEX_TOKEN=LTycXhyVA41QrWWhcMp_
  #     - WRITE_MISSING_AS_CSV=1 # Default 0, 1 = writes missing tracks from each playlist to a csv
  #     - APPEND_SERVICE_SUFFIX=0 # Default 1, 1 = appends the service name to the playlist name
  #     - ADD_PLAYLIST_POSTER=1 # Default 1, 1 = add poster for each playlist
  #     - ADD_PLAYLIST_DESCRIPTION=1 # Default 1, 1 = add description for each playlist
  #     - APPEND_INSTEAD_OF_SYNC=0 # Default 0, 1 = Sync tracks, 0 = Append only
  #     - SECONDS_TO_WAIT=84000
  #     - SPOTIFY_CLIENT_ID=6c27b67bc3d048a98a34817495c7ad98
  #     - SPOTIFY_CLIENT_SECRET=84ff2c0102f74741a5c43f8f04fdba9e
  #     - SPOTIFY_USER_ID=22xuhoj5orno5ngbe65hfcjpy
  #     - DEEZER_USER_ID=<your spotify user id>
  #     - DEEZER_PLAYLIST_ID= #<deezer playlist ids space seperated>
  #   restart: unless-stopped

  wg-easy:
    environment:
      # Change Language:
      # (Supports: en, ua, ru, tr, no, pl, fr, de, ca, es, ko, vi, nl, is, pt, chs, cht, it, th, hi, ja, si)
      - LANG=en
      # ⚠️ Required:
      # Change this to your host's public address
      - WG_HOST=racemiller.tplinkdns.com

      # Optional:
      # - PASSWORD_HASH=$$2y$$10$$hBCoykrB95WSzuV4fafBzOHWKu9sbyVa34GJr8VV5R/pIelfEMYyG # (needs double $$, hash of 'foobar123'; see "How_to_generate_an_bcrypt_hash.md" for generate the hash)
      # - PORT=51821
      # - WG_PORT=51820
      # - WG_CONFIG_PORT=92820
      # - WG_DEFAULT_ADDRESS=10.8.0.x
      # - WG_DEFAULT_DNS=1.1.1.1
      # - WG_MTU=1420
      # - WG_ALLOWED_IPS=192.168.15.0/24, 10.0.1.0/24
      # - WG_PERSISTENT_KEEPALIVE=25
      # - WG_PRE_UP=echo "Pre Up" > /etc/wireguard/pre-up.txt
      # - WG_POST_UP=echo "Post Up" > /etc/wireguard/post-up.txt
      # - WG_PRE_DOWN=echo "Pre Down" > /etc/wireguard/pre-down.txt
      # - WG_POST_DOWN=echo "Post Down" > /etc/wireguard/post-down.txt
      # - UI_TRAFFIC_STATS=true
      # - UI_CHART_TYPE=0 # (0 Charts disabled, 1 # Line chart, 2 # Area chart, 3 # Bar chart)
      # - WG_ENABLE_ONE_TIME_LINKS=true
      # - UI_ENABLE_SORT_CLIENTS=true
      # - WG_ENABLE_EXPIRES_TIME=true
      # - ENABLE_PROMETHEUS_METRICS=false
      # - PROMETHEUS_METRICS_PASSWORD=$$2a$$12$$vkvKpeEAHD78gasyawIod.1leBMKg8sBwKW.pQyNsq78bXV3INf2G # (needs double $$, hash of 'prometheus_password'; see "How_to_generate_an_bcrypt_hash.md" for generate the hash)

    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    volumes:
      - etc_wireguard:/etc/wireguard
    ports:
      - 51823:51820/udp
      - 51824:51821/tcp
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
      # - NET_RAW # ⚠️ Uncomment if using Podman
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1

  # watchstate:
  #   image: ghcr.io/arabcoders/watchstate:latest
  #       # To change the user/group id associated with the tool change the following line.
  #   user: "${UID:-1000}:${GID:-1000}"
  #   container_name: watchstate
  #   restart: unless-stopped
  #   ports:
  #     - "8112:8080" # The port which will serve WebUI + API + Webhooks
  #   volumes:
  #     - ${APPDATA}/watchstate:/config:rw # mount current directory to container /config directory.

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
   # Check for updates every 3 hours: (3h * 60m * 60s)
   # command: --interval 10800
    environment:
      - TZ=${TZ}
      - WATCHTOWER_CLEANUP=True
      - WATCHTOWER_NOTIFICATIONS=gotify
      - WATCHTOWER_NOTIFICATION_GOTIFY_URL=http://10.0.0.2:5454
      - WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN=AC6Tg5B5UuSbDm0
      - WATCHTOWER_NOTIFICATIONS_LEVEL=warn
      - WATCHTOWER_NOTIFICATIONS_HOSTNAME=Enterprise
      - WATCHTOWER_LABEL_ENABLE=False
    # - WATCHTOWER_DISABLE_CONTAINERS=

networks:
  default:
    driver: bridge
    ipam:
     config:
       - subnet: 192.168.112.0/20
         gateway: 192.168.112.1
